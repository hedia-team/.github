name: Run Build, Tests & SonarCloud Scan

on:
  workflow_call:
    inputs:
      database:
        description: Database used in this workflow. Default to none.
        required: false
        type: string

    secrets:
      READONLY_NPM_TOKEN:
        description: Needed to install private @hedia npm packages
        required: true
      SONAR_TOKEN:
        description: Needed to run SonarCloud Scan
        required: true

jobs:
  build-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: ${{ inputs.database && 'postgres' || '' }}
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: ${{ inputs.database }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of SonarCloud analysis

      - name: Setup Node.js Environment
        uses: actions/setup-node@v3
        with:
          node-version-file: "package.json"
          always-auth: true
          registry-url: https://registry.npmjs.org
          scope: "@hedia"

      - name: "Install Dependencies"
        run: npm ci
        env:
          NODE_AUTH_TOKEN: ${{ secrets.READONLY_NPM_TOKEN }}

      - name: "Build Repository"
        run: "npm run build --if-present"

      - name: "Run Tests"
        run: "npm run test"

      - name: SonarCloud Init
        env:
          GITHUB_PROJECT: ${{ github.repository }}
        run: echo "GITHUB_PROJECT=${GITHUB_PROJECT/\//_}" >> $GITHUB_ENV

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ github.token }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=${{ env.GITHUB_PROJECT }}
            -Dsonar.organization=${{ github.repository_owner }}
            -Dsonar.coverageReportPaths=coverage.xml
