name: Release Please

on:
    workflow_call:
        outputs:
            release_created:
                description: "Whether or not a release was created"
                value: ${{ jobs.release-please.outputs.release_created }}
            tag_name:
                description: "The tag name (version number) of the release created"
                value: ${{ jobs.release-please.outputs.tag_name }}

        secrets:
            HEDIA_BOT_GITHUB_PAT:
                description: Needed to run release-please
                required: true

permissions:
    contents: write
    pull-requests: write

jobs:
    release-please:
        runs-on: ubuntu-latest
        timeout-minutes: 5
        if: >
            github.event_name == 'workflow_dispatch' ||
            (
              github.event_name == 'pull_request' &&
              github.event.pull_request.merged == true &&
              contains(github.event.pull_request.labels.*.name, 'autorelease: pending')
            )
        steps:
            - id: release-please
              name: Release Please
              uses: googleapis/release-please-action@v3
              with:
                  release-type: node
                  token: ${{ secrets.HEDIA_BOT_GITHUB_PAT }}
                  default-branch: ${{ github.ref_name }}
                  changelog-types: '[{"type":"feat","section":"Features","hidden":false},{"type":"fix","section":"Bug Fixes","hidden":false},{"type":"deps","section":"Dependencies","hidden":false}]'

            - if: ${{ steps.release-please.outputs.release_created }}
              name: Download Test report
              uses: actions/download-artifact@v4
              with:
                  name: report
                  path: .

            - if: ${{ steps.release-please.outputs.release_created }}
              name: Upload Test report to Release
              uses: actions/github-script@v7
              with:
                  github-token: ${{ secrets.HEDIA_BOT_GITHUB_PAT }}
                  script: |
                      const fs = require('fs');
                      const { context, github } = require('@actions/github');

                      const tag = ${{ steps.release-please.outputs.tag_name }};
                      const file = fs.readFileSync('test.json');

                      await github.repos.uploadReleaseAsset({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        tag,
                        name: 'test.json',
                        data: file
                      });

        outputs:
            release_created: ${{ steps.release-please.outputs.release_created }}
            tag_name: ${{ steps.release-please.outputs.tag_name }}
