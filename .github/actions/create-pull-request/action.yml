name: Create Pull Request
description: If there are no changes, the action will exit silently.

inputs:
    github-token:
        description: The GitHub token to use.
        required: true
    base:
        description: The branch to create the PR against. Default to repository's default branch.
        required: false
    head:
        description: The branch to create the PR from.
        required: true
    title:
        description: The title of the PR.
        required: true
    body:
        description: The body of the PR.
        required: false
    commit:
        description: The commit message. If not provided, the title will be used.
        required: false
    force:
        description: Whether to force push the branch. Default to false.
        required: false
    auto-merge:
        description: Whether to enable auto-merge. Default to false.
        required: false
    draft:
        description: Whether to create the PR as a draft. Default to false.
        required: false
runs:
    using: "composite"
    steps:
        - id: git-status
          name: Git Status
          shell: bash
          run: "[[ -n $(git status --porcelain) ]] && echo 'changes=true' >> $GITHUB_OUTPUT || echo 'changes=false' >> $GITHUB_OUTPUT"

        - if: steps.git-status.outputs.changes == 'true'
          id: git-remote
          name: Git Remote
          shell: bash
          run: "[[ -n $(git ls-remote --heads origin refs/heads/$HEAD) ]] && echo 'branch=true' >> $GITHUB_OUTPUT || echo 'branch=false' >> $GITHUB_OUTPUT"
          env:
              HEAD: ${{ inputs.head }}

        - if: steps.git-status.outputs.changes == 'true'
          name: Commit Changes
          shell: bash
          run: |
              git config user.email 74369034+hedia-bot@users.noreply.github.com
              git config user.name hedia-bot
              git checkout -b $HEAD
              git add .
              [ -n $COMMIT ] && git commit -m $COMMIT || git commit -m $TITLE
              [ -n $FORCE ] && git push -f -u origin $HEAD || git push -u origin $HEAD
          env:
              COMMIT: ${{ inputs.commit }}
              FORCE: ${{ inputs.force }}
              HEAD: ${{ inputs.head }}
              TITLE: ${{ inputs.title }}

        - if: |
              steps.git-status.outputs.changes == 'true' &&
              steps.git-remote.outputs.branch == 'false'
          id: create-pull-request
          name: Create Pull Request
          uses: actions/github-script@v7
          with:
              github-token: ${{ github.event.inputs.github-token }}
              script: |
                  const owner = "${{ github.repository_owner }}";
                  const repo = "${{ github.event.repository.name }}";
                  const base = "${{ github.event.inputs.base || github.event.repository.default_branch }}";
                  const head = "${{ github.event.inputs.head }}";
                  const title = "${{ github.event.inputs.title }}";
                  const body = "${{ github.event.inputs.body }}" || null;
                  const draft = ${{ github.event.inputs.draft && true || false }};

                  const { data } = await github.rest.pulls.create({ owner, repo, head, base, title, body, draft });

                  console.log(`@${owner}/${repo}#${data.number}: PR Created`);

                  return { pull_number: data.number };

        - if: |
              steps.git-status.outputs.changes == 'true' &&
              steps.git-remote.outputs.branch == 'false' &&
              github.event.inputs.auto-merge
          name: Enable Auto-Merge
          shell: bash
          run: gh pr merge ${{ steps.create-pull-request.outputs.result.pull_number }} --auto --squash
          env:
              GH_TOKEN: ${{ github.event.inputs.github-token }}
